// –£ –Ω–∞—Å –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.
// –ò –Ω–∞—à–∞ –∑–∞–¥–∞—á–∞ –æ—Ç—Ä–∏—Å–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç —ç—Ç–∏—Ö –ø–æ—Å—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ.

// –ù–æ –ø–æ –∫–∞–∫–∏–º —Ç–æ –Ω–µ–æ–±—ä—è—Å–Ω–∏–º—ã–º –ø—Ä–∏—á–∏–Ω–∞–º, 
//–Ω–∞–º —Ç—Ä–µ–±—É—é—Ç—Å—è –ø–æ—Å—Ç—ã –Ω–æ–º–µ—Ä 3, 7, 15, 23. 
//–í—ã–≥–ª—è–¥–∏—Ç –ø—Ä–æ—Å—Ç–æ. –ù–æ –µ—Å—Ç—å –Ω—é–∞–Ω—Å üêí 

// –ü–æ—Å—Ç—ã –¥–æ–ª–∂–Ω—ã –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.
// –°–Ω–∞—á–∞–ª–∞ 15, –ø–æ—Ç–æ–º 23, –ø–æ—Ç–æ–º 7 –∏ —Ç–æ–ª—å–∫–æ –ø–æ—Ç–æ–º 3. 
//–ê –µ—Å–ª–∏ –∫–∞–∫–æ–π-—Ç–æ –∏–∑ –ø–æ—Å—Ç–æ–≤ –Ω–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è, –Ω–∞–º —Ç–æ–≥–¥–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ  –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –æ—à–∏–±–∫—É.

// –ù–∞—à–∞ –∑–∞–¥–∞—á–∞ –¥–æ–ª–∂–Ω–∞ –∏–º–µ—Ç—å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ.
// –í –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥—Ä—É–≥–∏–µ –ø–æ—Å—Ç—ã, –∏–ª–∏ –±–æ–ª—å—à–µ –ø–æ—Å—Ç–æ–≤ –∏–ª–∏ –º–µ–Ω—å—à–µ.

// –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å https://jsonplaceholder.typicode.com/posts
// –ó–∞–¥–∞—á–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —á–µ—Ä–µ–∑ https://jsonplaceholder.typicode.com/comments?postId=1
// –ª–∏–±–æ —á–µ—Ä–µ–∑ setTimeout.
// ###### –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∑–∞–¥–∞—á—É –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏:
// - Promise chaining
// - Async / await
import fetch from "node-fetch";
const url = 'https://jsonplaceholder.typicode.com/posts';

type RespType = {
      userId: number,
    id: number,
    title: string,
    body: string,
}

const result = await fetch(url).then(res => res.json())as RespType[];

function newPostList2 ( idNumber: number){
    const findId = (result.find(val => val.id === idNumber))
    const findBody = findId?.body
     return findId;
     //return findBody
}




function getComment(num1:number, num2:number, num3:number, num4:number){
    const promise1 = new Promise((res, rej)=>{
        res(newPostList2(num1));
        rej(new Error('Trouble'))
    }).then((result:any)=> {
        console.log('Sucess result :::', result);
    },
    (result: Error)=>{
        console.log('Fail result :::', result);
        
    });

      const promise2 = new Promise((res, rej)=>{
        res(newPostList2(num2));
        rej(new Error('Trouble'))
    }).then((result:any)=> {
        console.log('Sucess result :::', result);
    },
    (result: Error)=>{
        console.log('Fail result :::', result);
        
    });

     const promise3 = new Promise((res, rej)=>{
        res(newPostList2(num3));
        rej(new Error('Trouble'))
    }).then((result:any)=> {
        console.log('Sucess result :::', result);
    },
    (result: Error)=>{
        console.log('Fail result :::', result);
        
    });

     const promise4 = new Promise((res, rej)=>{
        res(newPostList2(num4));
        rej(new Error('Trouble'))
    }).then((result:any)=> {
        console.log('Sucess result :::', result);
    },
    (result: Error)=>{
        console.log('Fail result :::', result);
        
    });
}

getComment(15, 27, 7, 3)

function getComSetTim(num1:number, num2:number, num3:number, num4:number){
    setTimeout(()=>{
        console.log(newPostList2(num1));
        setTimeout(()=>{
            console.log(newPostList2(num2));
            setTimeout(()=>{
                console.log(newPostList2(num3));
                setTimeout(()=>{
                    console.log(newPostList2(num4));
                },0)
            },0)
        },0)
        
    },0)
}
getComSetTim(15,27,7,3)

// –ü–û–ö–ê–ñ–ò –ö–ê–ö –ï–©–Å –ú–û–ñ–ù–û –≠–¢–û –†–ï–®–ò–¢–¨










